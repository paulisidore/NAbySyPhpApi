1752635047
8a0c4faa9771445189035ca844487507-phpdoc%3Ac9f5edb46ebc3f9aea90c34db265bebb-4e0bd21a0468fc550feed90a23ce2c8d
s:21552:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:10:"gs_api.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:2:"\N";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:11:"\N::__get()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"key";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:372;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:26;s:47:" phpDocumentor\Reflection\Location columnNumber";i:608;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\N::__get()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"__get";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:1;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:27;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:2:"\N";s:36:" phpDocumentor\Reflection\Fqsen name";s:1:"N";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:87:"La Class static N regroupe l'ensemble des fonctions static de l'objet central NAbySyGS.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\NAbySy\xNAbySyGS";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"xNAbySyGS";}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"4e0bd21a0468fc550feed90a23ce2c8d";s:39:" phpDocumentor\Reflection\Php\File path";s:14:"src/gs_api.php";s:41:" phpDocumentor\Reflection\Php\File source";s:10092:"<?php
    /**
     * END-POINT NAbySy GS API
     * By Paul Isidore A. NIAMIE
     */

use NAbySy\xAuth;
use NAbySy\xErreur;
use NAbySy\xNAbySyGS;
use NAbySy\xNotification;
use NAbySy\xUser;
	

if (!class_exists('N')) {
	/**
	 * La Class static N regroupe l'ensemble des fonctions static de l'objet central NAbySyGS.
	 */
	class N extends xNAbySyGS { 
		final public function __get($key) {
			$method = 'get' . ucfirst($key);
			if (method_exists($this, $method)) {
			  return $this->$method($this->data[$key]);
			} else {
			  return parent::getInstance(); // self::$Main;
			}
		}
	}
}

    if(!isset($nabysy)){
        $nabysy = N::getInstance() ;
    }

	$PARAM=$_REQUEST;
    
    $ChampAction='Action';
	$action=null ;
	if (isset($PARAM[$ChampAction])){
		$action=$PARAM[$ChampAction] ;
	}
    if (isset($PARAM[strtolower($ChampAction)])){
		$action=$PARAM[strtolower($ChampAction)] ;
	}

    if(!isset($action)){
        $postData=N::ConvertBodyPostToArray();
        if($postData){
            $_REQUEST=$postData;
            $_POST=$postData ;
            if (is_array($_REQUEST)){
                $PARAM=$_REQUEST;
                if (isset($PARAM[$ChampAction])){
                    $action=$PARAM[$ChampAction] ;
                }
                if (isset($PARAM[strtolower($ChampAction)])){
                    $action=$PARAM[strtolower($ChampAction)] ;
                }
                $nabysy->ReadConfig();
            }
        }
        //echo json_encode($_POST);
    }
   	
    $Err=new xErreur ;
    $Err->TxErreur='Erreur';
    $Err->OK=0 ;
    if (!isset($action)){		
        //Il n'y a pas d'action, on retourne a la page précedente
        $Err->OK=0;
        $Err->TxErreur='Action non définit !' ;
        $Err->Source= __FUNCTION__ ;
        $reponse=json_encode($Err) ;
        echo $reponse ;
        exit;	
	}

    $PourAccesRobot=false;
    if (isset($PARAM['CLIENT_GENERAL'])){
        if ((int)$PARAM['CLIENT_GENERAL']>0){
            if (!isset($PARAM['LOGIN']) && !isset($PARAM['Login']) ){
                $fakeUser=new xUser($nabysy,0);
                $fakeUser->Id=-1 ;
                $fakeUser->Login="ACCES_ROBOT";
                $fakeUser->Password='NAbySyGS#ROBOT'.date('Y');
                $fakeUser->NIVEAUACCES=1;
                $fakeUser->Nom ="GENERAL";
                $fakeUser->Prenom="ACCES_ROBOT";

                $Auth=new xAuth($nabysy);
                $Token=$Auth->GetToken($fakeUser);
                $nabysy->UserToken=$Token ;
                $nabysy->User=$fakeUser ;
                $PourAccesRobot =true;

                $PARAM['Login']=$fakeUser->Login ;
                $PARAM['Password']=$fakeUser->Password ;
            }
        }
    }
    
    if(strtolower($action) == 'auth'){
        N::ReadHttpAuthRequest();
        return;
    }

    if (!$PourAccesRobot){
        if (!$nabysy->ValideUser()){
            exit;
        }
    }

/** Traitement des Actions interne à NAbySyGS" */
    //Si nous somme ici alors on pursuivre sur les autres action de l'API
    $rep=N::ModuleGSFolder().DIRECTORY_SEPARATOR ;
    $rep=str_replace('\\', DIRECTORY_SEPARATOR, $rep) ;
    //$rep="./main/rh/zoneaffectation" ;
    $dossier_action=[] ;
    if($nabysy::IsDirectory($rep)){
        if($iteration = opendir($rep)){
            while(($dos = readdir($iteration)) !== false)
            {
               if($dos != "." && $dos != ".." && $dos != "Thumbs.db")  
                {
                    $pathfile=$rep.$dos ;
                    if (is_dir($pathfile)){
                        $fichier_action=$pathfile."/".$dos."_action.php" ;
                        //var_dump($fichier_action);
                        if (file_exists($fichier_action)){
                            $dossier_action[]=$fichier_action ;
                            include_once $fichier_action;
                        }                                
                    }
                }
            }
            closedir($iteration);  
        }
    }

    //Ajout des APIs des Modules
    $rep= N::CurrentFolder()."moduleExterne/" ;
    $rep=str_replace('\\', DIRECTORY_SEPARATOR, $rep) ;
    //$rep="./main/rh/zoneaffectation" ;
    if($nabysy::IsDirectory($rep)){
        if($iteration = opendir($rep)){
            while(($dos = readdir($iteration)) !== false)
            {
               if($dos != "." && $dos != ".." && $dos != "Thumbs.db")  
                {
                    $pathfile=$rep.$dos ;
                    if (is_dir($pathfile)){
                        if($iteration2 = opendir($pathfile)){
                            while(($dos2 = readdir($iteration2)) !== false){
                                if($dos2 != "." && $dos2 != ".." && $dos2 != "Thumbs.db"){
                                    if (!is_dir($dos2)){
                                        //On a un fichier vérifions s'il a un _action.php
                                        $pos = strpos($dos2,"_action.php") ;
                                        //echo "Pos Pos = ".$pos."</br>" ;
                                        if ($pos){
                                            $fichier_action=$pathfile."/".$dos2 ;
                                            //var_dump($fichier_action);
                                            if (file_exists($fichier_action)){
                                                //var_dump($fichier_action);
                                                $dossier_action[]=$fichier_action ;
                                                include_once $fichier_action;
                                            }
                                        }
                                    }   
                                }
                            }
                        }
                                                 
                    }
                }
            }
            closedir($iteration);  
        }
    }
/** end region */

/** Traitement des Actions définit par l'application Hôte */
    //Si nous somme ici alors on pursuivre sur les autres action de l'API
    $rep= N::ModuleGSHostFolder(true).DIRECTORY_SEPARATOR ;
    $rep=str_replace('\\', DIRECTORY_SEPARATOR, $rep) ;
    //$rep="./main/rh/zoneaffectation" ;
    //$dossier_action=[] ;
    if($nabysy::IsDirectory($rep)){
        if($iteration = opendir($rep)){
            while(($dos = readdir($iteration)) !== false)
            {
               if($dos != "." && $dos != ".." && $dos != "Thumbs.db")  
                {
                    $pathfile=$rep.$dos ;
                    if (is_dir($pathfile)){
                        $fichier_action=$pathfile."/".$dos."_action.php" ;
                        //var_dump($fichier_action);
                        if (file_exists($fichier_action)){
                            $dossier_action[]=$fichier_action ;
                            include_once $fichier_action;
                        }                                
                    }
                }
            }
            closedir($iteration);  
        }
    }

    //Ajout des APIs des Modules
    $rep= N::CurrentFolder(true)."moduleExterne/" ;
    $rep=str_replace('\\', DIRECTORY_SEPARATOR, $rep) ;
    //$rep="./main/rh/zoneaffectation" ;
    if($nabysy::IsDirectory($rep)){
        if($iteration = opendir($rep)){
            while(($dos = readdir($iteration)) !== false)
            {
               if($dos != "." && $dos != ".." && $dos != "Thumbs.db")  
                {
                    $pathfile=$rep.$dos ;
                    if (is_dir($pathfile)){
                        if($iteration2 = opendir($pathfile)){
                            while(($dos2 = readdir($iteration2)) !== false){
                                if($dos2 != "." && $dos2 != ".." && $dos2 != "Thumbs.db"){
                                    if (!is_dir($dos2)){
                                        //On a un fichier vérifions s'il a un _action.php
                                        $pos = strpos($dos2,"_action.php") ;
                                        //echo "Pos Pos = ".$pos."</br>" ;
                                        if ($pos){
                                            $fichier_action=$pathfile."/".$dos2 ;
                                            //var_dump($fichier_action);
                                            if (file_exists($fichier_action)){
                                                //var_dump($fichier_action);
                                                $dossier_action[]=$fichier_action ;
                                                include_once $fichier_action;
                                            }
                                        }
                                    }   
                                }
                            }
                        }
                                                 
                    }
                }
            }
            closedir($iteration);  
        }
    }
/** end region */

    //var_dump($dossier_action);
    $Err->TxErreur='Aucun module ne peut traiter votre demande.';
    $Err->Source=__FILE__;
    if(isset($_REQUEST['TRACKERID'])){
        $Err->Source = $_REQUEST['TRACKERID'];
     }
     
    //var_dump($dossier_action);
    //foreach ($dossier_action as $fichier_action){
        //echo __FILE__."LINE:".__LINE__." => Chargement du Fichier ".$fichier_action." ...</br>";
       // include_once $fichier_action;
        //echo __FILE__."LINE:".__LINE__." =>Action non trouvé Chargement du Fichier suivant ...</br>";
                
    //}
    
    //Si on arrive ici c' est qu' aucun module n' a pus g'erer la requete
    if (isset($action)){
        $Err->TxErreur .= " ".$action." n'est pas définit." ;
    }
    echo json_encode($Err);

?>";s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:49:"END-POINT NAbySy GS API
By Paul Isidore A. NIAMIE";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";