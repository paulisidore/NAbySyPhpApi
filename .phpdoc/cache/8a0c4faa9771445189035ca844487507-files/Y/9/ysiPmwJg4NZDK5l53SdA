1752635174
8a0c4faa9771445189035ca844487507-phpdoc%3A2ded78396d9caf734dd67ac897d9986d-6112a4300898ba43fb650c85e46dd883
s:21676:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:32:"ClassListNodeTransformerTest.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:46:"\phpDocumentor\Guides\Compiler\NodeTransformer";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:46:"\phpDocumentor\Guides\Compiler\NodeTransformer";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"NodeTransformer";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:75:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:4:{s:110:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::testQueryResultExpandsClassList()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:965;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:73;s:47:" phpDocumentor\Reflection\Location columnNumber";i:2419;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:110:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::testQueryResultExpandsClassList()";s:36:" phpDocumentor\Reflection\Fqsen name";s:31:"testQueryResultExpandsClassList";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:143:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::testQueryResultExpandsBluePrintToSectionsWhenFirstElementIsTitle()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:75;s:47:" phpDocumentor\Reflection\Location columnNumber";i:2426;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:114;s:47:" phpDocumentor\Reflection\Location columnNumber";i:3705;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:143:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::testQueryResultExpandsBluePrintToSectionsWhenFirstElementIsTitle()";s:36:" phpDocumentor\Reflection\Fqsen name";s:64:"testQueryResultExpandsBluePrintToSectionsWhenFirstElementIsTitle";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:95:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::createDescriptor()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"className";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:116;s:47:" phpDocumentor\Reflection\Location columnNumber";i:3712;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:124;s:47:" phpDocumentor\Reflection\Location columnNumber";i:4088;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\phpDocumentor\Descriptor\Interfaces\ElementInterface";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"ElementInterface";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::createDescriptor()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"createDescriptor";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:96:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::createSectionNode()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\phpDocumentor\Descriptor\Interfaces\ElementInterface";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"ElementInterface";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:10:"descriptor";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:126;s:47:" phpDocumentor\Reflection\Location columnNumber";i:4095;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:140;s:47:" phpDocumentor\Reflection\Location columnNumber";i:4601;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\phpDocumentor\Guides\Nodes\SectionNode";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"SectionNode";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:96:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest::createSectionNode()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"createSectionNode";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:1:{s:31:"\Prophecy\PhpUnit\ProphecyTrait";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\Prophecy\PhpUnit\ProphecyTrait";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"ProphecyTrait";}}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:26;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:141;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:75:"\phpDocumentor\Guides\Compiler\NodeTransformer\ClassListNodeTransformerTest";s:36:" phpDocumentor\Reflection\Fqsen name";s:28:"ClassListNodeTransformerTest";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\PHPUnit\Framework\TestCase";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"TestCase";}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:1;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"6112a4300898ba43fb650c85e46dd883";s:39:" phpDocumentor\Reflection\Php\File path";s:124:"vendor/phpdocumentor/phpdocumentor/tests/unit/phpDocumentor/Guides/Compiler/NodeTransformer/ClassListNodeTransformerTest.php";s:41:" phpDocumentor\Reflection\Php\File source";s:4605:"<?php

declare(strict_types=1);

namespace phpDocumentor\Guides\Compiler\NodeTransformer;

use ArrayIterator;
use phpDocumentor\Descriptor\Collection;
use phpDocumentor\Descriptor\Interfaces\ElementInterface;
use phpDocumentor\Descriptor\Query\Engine;
use phpDocumentor\Descriptor\VersionDescriptor;
use phpDocumentor\Guides\Compiler\DescriptorAwareCompilerContext;
use phpDocumentor\Guides\Nodes\CollectionNode;
use phpDocumentor\Guides\Nodes\InlineCompoundNode;
use phpDocumentor\Guides\Nodes\InlineToken\PHPReferenceNode;
use phpDocumentor\Guides\Nodes\PHP\ClassList;
use phpDocumentor\Guides\Nodes\PHP\ElementName;
use phpDocumentor\Guides\Nodes\ProjectNode;
use phpDocumentor\Guides\Nodes\SectionNode;
use phpDocumentor\Guides\Nodes\TitleNode;
use phpDocumentor\Reflection\Fqsen;
use PHPUnit\Framework\TestCase;
use Prophecy\Argument;
use Prophecy\PhpUnit\ProphecyTrait;

final class ClassListNodeTransformerTest extends TestCase
{
    use ProphecyTrait;

    public function testQueryResultExpandsClassList(): void
    {
        $descriptor1 = $this->createDescriptor('\MyTestClass');
        $descriptor2 = $this->createDescriptor('\MyOtherClass');
        $engine = $this->prophesize(Engine::class);
        $engine->perform(
            Argument::type(VersionDescriptor::class),
            Argument::containingString('class-list'),
        )->willReturn(
            new ArrayIterator(
                [
                    $descriptor1,
                    $descriptor2,
                ],
            ),
        );

        $node = new ClassList(
            [new ElementName('')],
            'class-list',
        );

        $context = new DescriptorAwareCompilerContext(
            new ProjectNode(),
            new VersionDescriptor('1.0.0', new Collection()),
        );

        $transformer = new ClassListNodeTransformer($engine->reveal());
        $result = $transformer->leaveNode($node, $context);

        $this->assertEquals(
            [
                new CollectionNode([
                    (new PHPReferenceNode('class', new Fqsen('\MyTestClass')))
                        ->withDescriptor($descriptor1),
                ]),
                new CollectionNode([
                    (new PHPReferenceNode('class', new Fqsen('\MyOtherClass')))
                        ->withDescriptor($descriptor2),
                ]),
            ],
            $result->getChildren(),
        );
    }

    public function testQueryResultExpandsBluePrintToSectionsWhenFirstElementIsTitle(): void
    {
        $descriptor1 = $this->createDescriptor('\MyTestClass');
        $descriptor2 = $this->createDescriptor('\MyOtherClass');
        $engine = $this->prophesize(Engine::class);
        $engine->perform(
            Argument::type(VersionDescriptor::class),
            Argument::containingString('class-list'),
        )->willReturn(
            new ArrayIterator(
                [
                    $descriptor1,
                    $descriptor2,
                ],
            ),
        );

        $node = new ClassList(
            [
                (new ElementName(''))->withOptions(['title' => true]),
            ],
            'class-list',
        );

        $context = new DescriptorAwareCompilerContext(
            new ProjectNode(),
            new VersionDescriptor('1.0.0', new Collection()),
        );

        $transformer = new ClassListNodeTransformer($engine->reveal());
        $result = $transformer->leaveNode($node, $context);

        $this->assertEquals(
            [
                $this->createSectionNode($descriptor1),
                $this->createSectionNode($descriptor2),
            ],
            $result->getChildren(),
        );
    }

    private function createDescriptor(string $className): ElementInterface
    {
        $fqsen = new Fqsen($className);
        $descriptor1 = $this->prophesize(ElementInterface::class);
        $descriptor1->getFullyQualifiedStructuralElementName()->willReturn($fqsen);
        $descriptor1->getName()->willReturn($fqsen->getName());

        return $descriptor1->reveal();
    }

    private function createSectionNode(ElementInterface $descriptor): SectionNode
    {
        return new SectionNode(
            new TitleNode(
                new InlineCompoundNode(
                    [
                        (new PHPReferenceNode('class', $descriptor->getFullyQualifiedStructuralElementName()))
                            ->withDescriptor($descriptor),
                    ],
                ),
                2,
                $descriptor->getName(),
            ),
        );
    }
}
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";