1752635045
8a0c4faa9771445189035ca844487507-phpdoc%3A0939b10dbedbcc1566d051aab797742d-b9265d400e13bbef87acfa0774687d6a
s:34732:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjE3OiJwYW5pZXJfYWN0aW9uLnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJiOTI2NWQ0MDBlMTNiYmVmODdhY2ZhMDc3NDY4N2Q2YSI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjMxOiJzcmMvZ3MvcGFuaWVyL3Bhbmllcl9hY3Rpb24ucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoyNTEzMToiPD9waHANCnVzZSBOQWJ5U3lcR1NcQm91dGlxdWVceEJvdXRpcXVlOw0KdXNlIE5BYnlTeVxHU1xDbGllbnRceENsaWVudDsNCnVzZSBOQWJ5U3lcR1NcQ29kZUJhclx4Q29kZUJhckVBTjEzOw0KdXNlIE5BYnlTeVxHU1xGYWN0dXJlXHhQcm9mb3JtYTsNCnVzZSBOQWJ5U3lcR1NcRmFjdHVyZVx4VmVudGU7DQp1c2UgTkFieVN5XEdTXFBhbmllclx4QXJ0aWNsZVBhbmllcjsNCnVzZSBOQWJ5U3lcR1NcUGFuaWVyXHhDYXJ0Ow0KdXNlIE5BYnlTeVxHU1xQYW5pZXJceENhcnRQcm9Gb3JtYTsNCnVzZSBOQWJ5U3lcR1NcU3RvY2tceFByb2R1aXQ7DQp1c2UgTkFieVN5XEdTXFN0b2NrXHhQcm9kdWl0TkM7DQp1c2UgTkFieVN5XExpYlxCb25BY2hhdFxJQm9uQWNoYXRNYW5hZ2VyOw0KdXNlIE5BYnlTeVxMaWJcTW9kdWxlUGFpZVxXYXZlXHhDaGVja091dFBhcmFtOw0KDQogICAgLy9pbmNsdWRlX29uY2UgJy4vbmFieXN5X2FjdGlvbi5waHAnOw0KICAgICRJZFBhbmllcj1udWxsIDsNCiAgICAkSXNQcm9mb3JtYT1mYWxzZTsNCiAgICBpZiAoaXNzZXQoJFBBUkFNWydJc1Byb2Zvcm1hJ10pKXsNCiAgICAgICAgJElzUHJvZm9ybWE9dHJ1ZSA7DQogICAgfQ0KDQogICAgaWYgKGlzc2V0KCRQQVJBTVsnSWRQYW5pZXInXSkpew0KCQkkSWRQYW5pZXI9JFBBUkFNWydJZFBhbmllciddIDsNCgl9DQoJDQogICAgJFBhbmllcj1uZXcgeENhcnQoJG5hYnlzeS0+TWFCb3V0aXF1ZSwkSWRQYW5pZXIpOw0KCWlmICgkSXNQcm9mb3JtYSl7DQogICAgICAgICRQYW5pZXI9bmV3ICB4Q2FydFByb0Zvcm1hKCRuYWJ5c3ktPk1hQm91dGlxdWUsJElkUGFuaWVyKTsNCgl9DQogICAgLy92YXJfZHVtcCgkYWN0aW9uKTsNCiAgICBzd2l0Y2ggKCRhY3Rpb24pew0KCQljYXNlICJHRVRfRkFDVFVSRSI6DQoJCQkkSWRGYWN0dXJlPW51bGwgOw0KCQkJaWYgKGlzc2V0KCRfUkVRVUVTVFsnSWRGYWN0dXJlJ10pKXsNCgkJCQkkSWRGYWN0dXJlPSRfUkVRVUVTVFsnSWRGYWN0dXJlJ10gOw0KCQkJfQ0KCQkJJEVycj1uZXcgeEVycmV1ciA7DQoJCQlpZiAoJElkRmFjdHVyZSl7DQoJCQkJJFZlbnRlPW5ldyB4VmVudGUoJG5hYnlzeSwkSWRGYWN0dXJlKSA7CQkJCQ0KCQkJCWlmICgkVmVudGUtPklkPjApew0KCQkJCQkvL3Zhcl9kdW1wKCRWZW50ZS0+VG9KU09OKCkpIDsNCgkJCQkJJFJlcG9uc2U9JFZlbnRlLT5EZXRhaWxUb0pTT04oKTsNCgkJCQkJZWNobyAkUmVwb25zZSA7DQoJCQkJfWVsc2V7DQoJCQkJCSRFcnItPk9LPTA7DQoJCQkJCSRFcnItPlR4RXJyZXVyPSdJbXBvc3NpYmxlIGRlIHRyb3V2ZXIgbGEgZmFjdHVyZSBuwrAnLiRJZEZhY3R1cmU7DQoJCQkJCSRFcnItPlNvdXJjZT0ncGFuaWVyX2FjdGlvbi5waHAnIDsNCgkJCQkJJFJlcG9uc2U9anNvbl9lbmNvZGUoJEVycik7DQoJCQkJCWVjaG8gJFJlcG9uc2UgOw0KCQkJCX0NCgkJCQlleGl0Ow0KCQkJfQ0KCQkJJERhdGVEZWI9bnVsbDsNCgkJCSREYXRlRmluPW51bGw7DQoJCQkkQ3JpdGVyZT0iIiA7DQoJCQlpZiAoaXNzZXQoJF9SRVFVRVNUWydEQVRFREVCVVQnXSkpew0KCQkJCSREYXRlRGViPSRfUkVRVUVTVFsnREFURURFQlVUJ10gOw0KCQkJCSREYXRlRD1uZXcgRGF0ZVRpbWUoJERhdGVEZWIpOw0KCQkJCWlmIChpc3NldCgkX1JFUVVFU1RbJ0RBVEVGSU4nXSkpew0KCQkJCQkkRGF0ZUZpbj0kX1JFUVVFU1RbJ0RBVEVGSU4nXSA7DQoJCQkJCSREYXRlRj1uZXcgRGF0ZVRpbWUoJERhdGVGaW4pOw0KCQkJCX0NCgkJCQlpZiAoJERhdGVEICE9PSBmYWxzZSAmJiAkRGF0ZUYgIT09IGZhbHNlKXsNCgkJCQkJJENyaXRlcmUgLj0iIERBVEVGQUNUVVJFID49JyIuJERhdGVELT5mb3JtYXQoJ1ktbS1kJykuIicgYW5kIERBVEVGQUNUVVJFIDw9JyIuJERhdGVGLT5mb3JtYXQoJ1ktbS1kJykuIicgIjsNCgkJCQl9ZWxzZWlmICgkRGF0ZUQgIT09IGZhbHNlICl7DQoJCQkJCSRDcml0ZXJlIC49IiBEQVRFRkFDVFVSRSA9JyIuJERhdGVELT5mb3JtYXQoJ1ktbS1kJykuIicgIjsNCgkJCQl9DQoJCQl9DQoJCQkkVmVudGU9bmV3IHhWZW50ZSgkbmFieXN5KSA7DQoJCQkkTHN0PSRWZW50ZS0+Q2hhcmdlTGlzdGUoJENyaXRlcmUpOw0KCQkJJFJlcG9uc2U9IiI7DQoJCQlpZiAoJExzdCl7DQoJCQkJJFJlcD1bXTsNCgkJCQl3aGlsZSAoJHJvdz0kTHN0LT5mZXRjaF9hc3NvYygpKXsNCgkJCQkJJFJlcFtdPSRyb3cgOw0KCQkJCX0NCgkJCQkkUmVwb25zZT1qc29uX2VuY29kZSgkUmVwKTsNCgkJCX0NCgkJCWVjaG8gJFJlcG9uc2UgOwkJCQ0KDQoJCQlleGl0Ow0KCQkNCgkJY2FzZSAiSU1QUkVTU0lPTl9BNCI6DQoJCQkkSWRGYWN0dXJlPW51bGwgOw0KCQkJJE5vbUNsaWVudD1udWxsOw0KCQkJDQoJCQlpZiAoaXNzZXQoJF9SRVFVRVNUWydJZEZhY3R1cmUnXSkpew0KCQkJCSRJZEZhY3R1cmU9JF9SRVFVRVNUWydJZEZhY3R1cmUnXSA7DQoJCQl9DQoNCgkJCWlmIChpc3NldCgkX1JFUVVFU1RbJ05vbUNsaWVudCddKSl7DQoJCQkJJE5vbUNsaWVudCA9ICRfUkVRVUVTVFsnTm9tQ2xpZW50J107DQoJCQl9DQoJCQlpZiAoaXNzZXQoJF9SRVFVRVNUWydQcmVub21DbGllbnQnXSkpew0KCQkJCSROb21DbGllbnQgLj0nICcuJF9SRVFVRVNUWydQcmVub21DbGllbnQnXTsNCgkJCX0NCg0KCQkJJEVycj1uZXcgeEVycmV1ciA7DQoJCQkkVmVudGU9bmV3IHhWZW50ZSgkbmFieXN5LCRJZEZhY3R1cmUpIDsNCgkJCWlmICgkVmVudGUtPklkPjApew0KCQkJCWlmIChpc3NldCgkTm9tQ2xpZW50KSl7DQoJCQkJCSRWZW50ZS0+Tm9tQmVuZWZpY2lhaXJlPSROb21DbGllbnQgOw0KCQkJCQkkVmVudGUtPkVucmVnaXN0cmVyKCk7DQoJCQkJfQ0KCQkJCSRodHRwWD0naHR0cDovLycgOw0KCQkJCWlmIChpc3NldCgkX1NFUlZFUlsnSFRUUFMnXSkpew0KCQkJCQkkaHR0cFg9J2h0dHBzOi8vJzsNCgkJCQl9DQoJCQkJLy92YXJfZHVtcCgkX1NFUlZFUlsnU0VSVkVSX05BTUUnXSk7DQoJCQkJJExpZW49JGh0dHBYLiRfU0VSVkVSWydTRVJWRVJfTkFNRSddLicvZ3NfYXBpLnBocD9BY3Rpb249UFJJTlRfRkFDVEE0JklkPScuJElkRmFjdHVyZS4nJlRva2VuPScuJG5hYnlzeS0+VXNlclRva2VuIDsNCgkJCQllY2hvICRMaWVuIDsNCg0KCQkJfWVsc2V7DQoJCQkJJEVyci0+T0s9MDsNCgkJCQkkRXJyLT5UeEVycmV1cj0nSW1wb3NzaWJsZSBkZSB0cm91dmVyIGxhIGZhY3R1cmUgbsKwJy4kSWRGYWN0dXJlOw0KCQkJCSRFcnItPlNvdXJjZT0ncGFuaWVyX2FjdGlvbi5waHAnIDsNCgkJCQkkUmVwb25zZT1qc29uX2VuY29kZSgkRXJyKTsNCgkJCQllY2hvICRSZXBvbnNlIDsNCgkJCX0NCg0KCQkJZXhpdDsNCg0KCQkNCgkJY2FzZSAiU0FWRV9QQU5JRVIiOg0KCQkJJENvbnRlbnU9bnVsbDsNCgkJCSRJZENsaWVudD1udWxsOw0KCQkJJFRvdGFsUmVkdWN0aW9uPTA7DQoJCQkkVG90YWxSZW1pc2U9bnVsbDsNCgkJCSRFcnItPlR4RXJyZXVyPSIiOw0KDQoJCQlpZiAoaXNzZXQoJF9SRVFVRVNUWydJZENsaWVudCddKSl7CQkJCQ0KCQkJCWlmICgkX1JFUVVFU1RbJ0lkQ2xpZW50J10+MCl7DQoJCQkJCSRJZENsaWVudD0kX1JFUVVFU1RbJ0lkQ2xpZW50J10gOwkJCQkJDQoJCQkJCSRDbGllbnQ9bmV3IHhDbGllbnQoJEJvdXRpcXVlLCRJZENsaWVudCkgOw0KCQkJCQkkUGFuaWVyLT5DbGllbnQ9JENsaWVudCA7DQoJCQkJCSRQYW5pZXItPklkQ2xpZW50PSRJZENsaWVudDsNCgkJCQkJLy92YXJfZHVtcCgkUGFuaWVyLT5DbGllbnQtPklkKTsNCgkJCQl9CQkJCQ0KCQkJfQ0KDQoJCQlpZiAoaXNzZXQoJF9SRVFVRVNUWydDb250ZW51ZSddKSl7DQoJCQkJJENvbnRlbnU9anNvbl9kZWNvZGUoJF9SRVFVRVNUWydDb250ZW51ZSddKSA7DQogICAgICAgICAgICAgICAgLy92YXJfZHVtcCgkQ29udGVudSk7DQoJCQkJaWYgKGlzc2V0KCRDb250ZW51KSl7DQoJCQkJCSRMaXN0ZUFydGljbGU9JENvbnRlbnUtPkxpc3RlQXJ0aWNsZSA7DQoJCQkJfQ0KICAgICAgICAgICAgICAgIC8vdmFyX2R1bXAoJExpc3RlQXJ0aWNsZSk7DQoJCQkJLy9leGl0Ow0KCQkJfQ0KCQkJJEdyb3NzaXN0ZT1mYWxzZTsNCgkJCWlmIChpc3NldCgkUEFSQU1bJ0dyb3NzaXN0ZSddKSl7CQkJCQ0KCQkJCWlmICgkUEFSQU1bJ0dyb3NzaXN0ZSddPT0ndHJ1ZScpew0KCQkJCQkkR3Jvc3Npc3RlPXRydWUgOw0KCQkJCX1lbHNlew0KCQkJCQkkR3Jvc3Npc3RlPWZhbHNlIDsNCgkJCQl9CQkJCQ0KCQkJfQ0KDQoJCQlpZiAoaXNzZXQoJFBBUkFNWydNb250YW50VmVyc2UnXSkpewkJCQkNCgkJCQlpZiAoKGludCkkUEFSQU1bJ01vbnRhbnRWZXJzZSddICE9PSAwKXsNCgkJCQkJJFBhbmllci0+TW9udGFudFZlcnNlPShpbnQpJFBBUkFNWydNb250YW50VmVyc2UnXSA7DQoJCQkJfQ0KCQkJfQ0KCQkJaWYgKGlzc2V0KCRQQVJBTVsnTW9udGFudFJlbmR1J10pKXsJCQkJDQoJCQkJaWYgKChpbnQpJFBBUkFNWydNb250YW50UmVuZHUnXSAhPT0gMCl7DQoJCQkJCSRQYW5pZXItPk1vbnRhbnRSZW5kdT0oaW50KSRQQVJBTVsnTW9udGFudFJlbmR1J10gOw0KCQkJCX0NCgkJCX0NCgkJCSRQYW5pZXItPlRvdGFsUmVkdWN0aW9uPTA7DQoJCQkvL3Zhcl9kdW1wKCRQYW5pZXItPlRvdGFsUmVkdWN0aW9uICk7DQoJCQlmb3JlYWNoICgkQ29udGVudS0+TGlzdGVBcnRpY2xlIGFzICRBcnQpew0KCQkJCWlmICgkQXJ0LT5JZCA9PSAtMSAmJiAkQXJ0LT5Jc1BkdENsb3duPjApew0KCQkJCQkkUGR0PW5ldyB4UHJvZHVpdE5DKCRuYWJ5c3ksbnVsbCxOOjpHTE9CQUxfQVVUT19DUkVBVEVfREJUQUJMRSxudWxsLG51bGwsJEFydC0+Q29kZUJhcik7DQoJCQkJfWVsc2V7DQoJCQkJCSRQZHQ9bmV3IHhQcm9kdWl0KCRuYWJ5c3ksJEFydC0+SWQsJG5hYnlzeTo6R0xPQkFMX0FVVE9fQ1JFQVRFX0RCVEFCTEUsbnVsbCwgJG5hYnlzeS0+TWFCb3V0aXF1ZSkgOw0KCQkJCX0JCQkJDQogICAgICAgICAgICAgICAgLy92YXJfZHVtcChnZXRfY2xhc3MoJFBkdCkpOw0KCQkJCSRUeXBlVmVudGVQYXJEZWZhdXQ9MSA7DQoJCQkJaWYgKCRBcnQtPlZFTlRFREVUQUlMTEVFID09J2ZhbHNlJyB8fCAkQXJ0LT5WRU5URURFVEFJTExFRSA9PSdGYWxzZScgfHwgJEFydC0+VkVOVEVERVRBSUxMRUUgPT0nMCcpew0KCQkJCQkkVHlwZVZlbnRlUGFyRGVmYXV0PTAgOw0KCQkJCX0NCgkJCQkkTmV3QXJ0aWNsZT1uZXcgeEFydGljbGVQYW5pZXIoJG5hYnlzeSwkUGR0LT5JZCwkQXJ0LT5RdGUsJFR5cGVWZW50ZVBhckRlZmF1dCwkbmFieXN5LT5NYUJvdXRpcXVlLCRBcnQtPkNvZGVCYXIpIDsNCgkJCQkvL3Zhcl9kdW1wKCROZXdBcnRpY2xlKTsNCgkJCQlpZiAoJE5ld0FydGljbGUpewkNCgkJCQkJJE1vZGlmPWZhbHNlIDsJCQkJCQ0KCQkJCQlpZiAoJEFydC0+SWQgPjAgJiYgISRBcnQtPklzUGR0Q2xvd24gKXsNCgkJCQkJCWlmICgkUGFuaWVyLT5QZHRFeGlzdGUoJFBkdC0+SWQsJFR5cGVWZW50ZVBhckRlZmF1dCkpew0KCQkJCQkJCS8vJ09uIG1vZGlmaWUgbGEgcXVhbnRpdMOpJw0KCQkJCQkJCSRNb2RpZj1mYWxzZSA7DQoJCQkJCQl9DQoJCQkJCX0JCQkJCQkJCQkJCQ0KCQkJCQkNCgkJCQkJaWYgKCEkQXJ0LT5Jc1BkdENsb3duKXsNCgkJCQkJCS8qU2kgQm91dGlxdWUgYXZlYyBQcml4IENhbGN1bMOpIGV0IG5vbiBHcm9zc2lzdGUgKi8NCgkJCQkJCWlmICgkbmFieXN5LT5NYUJvdXRpcXVlLT5BdXRvQ2FsY3VsUFY+MCl7DQoJCQkJCQkJaWYgKCEkR3Jvc3Npc3RlKXsNCgkJCQkJCQkJLy9lY2hvICcgPC9icj5KZSBjYWxjdWwgbGUgUHJpeCBkZSBWZW50ZTogJyA7DQoJCQkJCQkJCSRFblBsdXM9JE5ld0FydGljbGUtPlByaXhVICogcm91bmQoKCRuYWJ5c3ktPk1hQm91dGlxdWUtPlRhdXhQViAvMTAwKSwwKSA7DQoJCQkJCQkJCSR2RW5QbHVzPSgkTmV3QXJ0aWNsZS0+UHJpeFUqKCRuYWJ5c3ktPk1hQm91dGlxdWUtPlRhdXhQViAvMTAwKSkgOw0KCQkJCQkJCQkkRW5QbHVzPShpbnQpcm91bmQoJHZFblBsdXMsMCxQSFBfUk9VTkRfSEFMRl9VUCkgOw0KCQkJCQkJCQkvL2VjaG8gJyA8L2JyPkxlIFN1cnBsdXMgZGUgJy4kbmFieXN5LT5NYUJvdXRpcXVlLT5UYXV4UFYuJyUgPScuJEVuUGx1cy4nIDwvYnI+JyA7DQoJCQkJCQkJCSROZXdBcnRpY2xlLT5Qcml4VSArPSRFblBsdXMgOw0KCQkJCQkJCX0NCgkJCQkJCX0JDQoJCQkJCX0NCgkJCQkJDQoJCQkJCS8vdmFyX2R1bXAoJE5ld0FydGljbGUpOw0KCQkJCQkvL2VjaG8gJyA8L2JyPkFydGljbGUgUHJpeCBkZSBWZW50ZTogJy4gJE5ld0FydGljbGUtPlByaXhVLiIgUG91ciBsZSBUeXBlVmVudGU9Ii4kVHlwZVZlbnRlUGFyRGVmYXV0LiIgVmVudGUgR3Jvc3Npc3RlPSIuJEdyb3NzaXN0ZSA7DQoJCQkJCS8qIAktLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovDQoJCQkJCSRSZXA9JFBhbmllci0+YWRkUHJvZHVjdCgkTmV3QXJ0aWNsZS0+SWRQcm9kdWl0LCROZXdBcnRpY2xlLT5Ob20sJE5ld0FydGljbGUtPlF0ZSwkTmV3QXJ0aWNsZS0+UHJpeFUsJE5ld0FydGljbGUtPlR5cGVWZW50ZSwkUGFuaWVyLT5JZENsaWVudCwkTW9kaWYsZmFsc2UsJE5ld0FydGljbGUtPkNvZGVCYXIpIDsNCgkJCQkJaWYgKCRSZXAgIT0gdHJ1ZSApew0KCQkJCQkJJFR4RXJyZXVyPSRSZXAgOw0KCQkJCQkJZWNobyAkVHhFcnJldXIgOw0KCQkJCQkJZXhpdCA7DQoJCQkJCX0JCQkJCQ0KCQkJCQkJCQkJCQkJCQ0KCQkJCX0NCg0KCQkJfQkJCQ0KDQoJCQkJCQkNCiAgICAgICAgICAgIC8vT24gdsOpcmlmaWUgbGVzIE1vZHVsZXMgZGUgUmVkdWN0aW9uCQkJDQogICAgICAgICAgICBpZiAoaXNzZXQoJFBBUkFNWydSRU1JU0UnXSkpew0KICAgICAgICAgICAgICAgIC8vSWwgeSBhIGRlcyByZW1pc2VzDQogICAgICAgICAgICAgICAgJExpc3RlUmVtaXNlPWpzb25fZGVjb2RlKCRQQVJBTVsnUkVNSVNFJ10sdHJ1ZSk7DQoJCQkJDQogICAgICAgICAgICAgICAgJFRvdGFsUmVtaXNlPShpbnQpJFBhbmllci0+VG90YWxSZW1pc2UgOw0KCQkJCS8vdmFyX2R1bXAoJFRvdGFsUmVtaXNlKTsNCiAgICAgICAgICAgICAgICBmb3JlYWNoKCRMaXN0ZVJlbWlzZSBhcyAkUmVtaXNlKXsNCgkJCQkJLy92YXJfZHVtcCgkUmVtaXNlKTsNCgkJCQkJLy9mb3JlYWNoICgkUmVtIGFzICRSZW1pc2Upew0KCQkJCQkJDQoJCQkJCQlpZiAoaXNzZXQoJFJlbWlzZVsnTW9udGFudFJlbWlzZSddKSl7DQoJCQkJCQkJJFRvdGFsUmVtaXNlICs9KGludCkkUmVtaXNlWydNb250YW50UmVtaXNlJ107DQoJCQkJCQkJJFBhbmllci0+Tm9tQmVuZWZpY2lhaXJlUmVtaXNlPSRSZW1pc2VbJ05PTUJFTkVGSUNJQUlSRSddIDsNCgkJCQkJCX1lbHNlew0KCQkJCQkJCS8vdmFyX2R1bXAoJFJlbWlzZSk7DQoJCQkJCQl9DQoJCQkJCS8vfQ0KCQkJCQkvL3Zhcl9kdW1wKCRUb3RhbFJlbWlzZSk7DQoJCQkJCS8vZXhpdDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgJFBhbmllci0+VG90YWxSZW1pc2U9JFRvdGFsUmVtaXNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkTGlzdGVNb2RDYWxsQmFjaz1bXTsgLy9DZXR0ZSBsaXN0ZSBkZSBtb2R1bGUgc2VyYSBleGVjdXTDqWUgdW5lIGZvaXMgbGEgZmFjdHVyZSB2YWxpZMOpZQ0KCQkJJExpc3RlQm9uQWNoYXQ9bnVsbDsgLy9SZXRpZW50IGxhIGxpc3RlIGRlcyBib25zIGQnYWNoYXQgdXRpbGlzw6kNCgkJCSRMaXN0ZU1ldGhvZGVQYWllPVtdIDsgLy9MaXN0ZSBkZXMgTcOpdGhvZGVzIGRlIFBhaWVtZW50IFV0aWxpc8OpZS4NCgkJCSRMaXN0ZU1vYmlsZVBhaWVDaGVja091dD1bXTsgLy9MaXN0ZSBkZXMgY2hlY2tPdXQgcGFyIG1vZHVsZSBkZSBwYWllbWVudA0KDQoNCiAgICAgICAgICAgIGlmIChpc3NldCgkUEFSQU1bJ0JPTkFDSEFUJ10pKXsNCiAgICAgICAgICAgICAgICAvL0lsIHkgYSBkZXMgYm9ucyBkJ2FjaGF0DQogICAgICAgICAgICAgICAgJExpc3RlQm9uQWNoYXQ9anNvbl9kZWNvZGUoJFBBUkFNWydCT05BQ0hBVCddLHRydWUpOw0KICAgICAgICAgICAgICAgICRUb3RhbFJlZHVjdGlvbj0oaW50KSRQYW5pZXItPlRvdGFsUmVkdWN0aW9uIDsNCgkJCQkvL3Zhcl9kdW1wKCRuYWJ5c3k6OiRMaXN0ZU1vZHVsZUJvbkFjaGF0KTsNCgkJCQkvL3Zhcl9kdW1wKCRQQVJBTSk7DQoJCQkJLy92YXJfZHVtcCgkTGlzdGVCb25BY2hhdCk7DQoJCQkJaWYgKGlzX2FycmF5KCRMaXN0ZUJvbkFjaGF0KSl7DQoJCQkJCS8vdmFyX2R1bXAoIkxpc3RlQm9uQWNoYXQ6IEJPTiBBQ0hBVCBlc3QgdW4gVGFibGVhdSIpOw0KCQkJCX0NCg0KCQkJCWlmIChpc19hcnJheSgkTGlzdGVCb25BY2hhdCkpew0KCQkJCQlpZiAoY291bnQoJExpc3RlQm9uQWNoYXQpKXsNCgkJCQkJCWZvcmVhY2ggKCRMaXN0ZUJvbkFjaGF0IGFzICRCb25BY2hhdCl7DQoJCQkJCQkJLy9PbiBhcHBlbCBsZSBtb2R1bGUgZHUgQm9uIGQnQWNoYXQgQ29uY2VybsOpIHBvdXIgbGEgbWlzZSBhIGpvdXIgZGVzIGhpc3RvcmlxdWVzIGV0IGRlcyBTb2xkZXMNCgkJCQkJCQkvL3Zhcl9kdW1wKCRCb25BY2hhdCk7DQoJCQkJCQkJaWYgKGlzc2V0KCRCb25BY2hhdFsnTU9EVUxFJ10pKXsNCgkJCQkJCQkJJE5vbUNsYXNzPSRCb25BY2hhdFsnTU9EVUxFJ107DQoJCQkJCQkJCWlmICghJG5hYnlzeS0+UHJlc2VuY2VCb25BY2hhdE1vZHVsZSgkTm9tQ2xhc3MpKXsNCgkJCQkJCQkJCSRFcnItPlR4RXJyZXVyPSJMZSBtb2R1bGUgZGUgQm9uIGQnQWNoYXQgIi4kTm9tQ2xhc3MuICIgbidlc3QgcGFzIGRpcG9uaWJsZSBlbiBjZSBtb21lbnQuIENvbnRhY3RleiB2b3RyZSBhZG1pbmlzdHJhdGV1ciBzdnAuIiA7DQoJCQkJCQkJCQkkUmVwPWpzb25fZW5jb2RlKCRFcnIpOw0KCQkJCQkJCQkJZWNobyAkUmVwOw0KCQkJCQkJCQkJZXhpdDsNCgkJCQkJCQkJfQ0KCQkJCQkJCQl0cnkgew0KCQkJCQkJCQkJLy92YXJfZHVtcCgkQm9uQWNoYXQpOw0KCQkJCQkJCQkJZm9yZWFjaCAoJG5hYnlzeTo6JExpc3RlTW9kdWxlQm9uQWNoYXQgYXMgJE1vZEJvbkFjaGF0KXsNCgkJCQkJCQkJCQkvL3Zhcl9kdW1wKCRNb2RCb25BY2hhdCk7DQoJCQkJCQkJCQkJaWYgKCRNb2RCb25BY2hhdCBpbnN0YW5jZW9mIElCb25BY2hhdE1hbmFnZXIpew0KCQkJCQkJCQkJCQkvL3Zhcl9kdW1wKCRCb25BY2hhdFsnTW9udGFudEJvbiddKTsNCgkJCQkJCQkJCQkJaWYgKGlzc2V0KCRNb2RCb25BY2hhdCkpew0KCQkJCQkJCQkJCQkJJHJlcD0kTW9kQm9uQWNoYXQtPkF1dG9yaXNlVHJhbnNhY3Rpb24oJEJvbkFjaGF0LCRQYW5pZXIpOw0KCQkJCQkJCQkJCQkJaWYgKCRyZXA9PWZhbHNlKXsNCgkJCQkJCQkJCQkJCQkkRXJyLT5UeEVycmV1cj0iVHJhbnNhY3Rpb24gbm9uIGF1dG9yaXPDqWUgcGFyIGxlIE1vZHVsZSBkZSBCb24gZCdBY2hhdCAiLiRNb2RCb25BY2hhdC0+Tm9tKCk7DQoJCQkJCQkJCQkJCQkJJEVyci0+U291cmNlPSROb21DbGFzczsNCgkJCQkJCQkJCQkJCQkkTGFzdEVycm9yPSRNb2RCb25BY2hhdC0+Tm9tKCkuIjogIi4kTW9kQm9uQWNoYXQtPkxhc3RFcnJvcigpOw0KCQkJCQkJCQkJCQkJCWlmICgkTGFzdEVycm9yICE9PSIiKXsNCgkJCQkJCQkJCQkJCQkJJEVyci0+VHhFcnJldXI9JExhc3RFcnJvciA7DQoJCQkJCQkJCQkJCQkJfQ0KCQkJCQkJCQkJCQkJCSRSZXA9anNvbl9lbmNvZGUoJEVycik7DQoJCQkJCQkJCQkJCQkJZWNobyAkUmVwOw0KCQkJCQkJCQkJCQkJCWV4aXQ7DQoJCQkJCQkJCQkJCQkJLy9icmVhazsNCgkJCQkJCQkJCQkJCX1lbHNlew0KCQkJCQkJCQkJCQkJCSRMaXN0ZU1vZENhbGxCYWNrW109JE1vZEJvbkFjaGF0Ow0KCQkJCQkJCQkJCQkJCSRUb3RhbFJlZHVjdGlvbiArPSRCb25BY2hhdFsnTW9udGFudEJvbiddOw0KCQkJCQkJCQkJCQkJfQ0KCQkJCQkJCQkJCQl9DQoJCQkJCQkJCQkJfWVsc2V7DQoJCQkJCQkJCQkJCXZhcl9kdW1wKGdldHR5cGUoJE1vZEJvbkFjaGF0KSk7DQoJCQkJCQkJCQkJfQ0KCQkJCQkJCQkJfQ0KCQkJCQkJCQkJDQoJCQkJCQkJCX1jYXRjaChFeGNlcHRpb24gJGV4KXsNCg0KCQkJCQkJCQl9DQoJCQkJCQkJCQ0KCQkJCQkJCQkNCgkJCQkJCQl9DQoJCQkJCQkJDQoJCQkJCQl9DQoJCQkJCQkvL3Zhcl9kdW1wKCJKZSBTdWlzIGljaSBMaWduZSAiLl9fTElORV9fKTsNCgkJCQkJCS8vZXhpdDsNCgkJCQkJCQ0KCQkJCQl9DQoJCQkJCSRQYW5pZXItPlRvdGFsUmVkdWN0aW9uPSRUb3RhbFJlZHVjdGlvbjsNCgkJCQl9DQogICAgICAgICAgICB9DQoNCgkJCS8vdmFyX2R1bXAoJFBhbmllci0+VG90YWxSZWR1Y3Rpb24pOw0KDQoJCQlpZiAoaXNzZXQoJFBBUkFNWydNT0RVTEUtUEFJRU1FTlQnXSkpew0KCQkJCS8vZWNobyAkUEFSQU1bJ01PRFVMRS1QQUlFTUVOVCddOw0KCQkJCQ0KCQkJCXRyeSB7DQoJCQkJCSRMaXN0ZU09anNvbl9kZWNvZGUoJFBBUkFNWydNT0RVTEUtUEFJRU1FTlQnXSk7DQoJCQkJCS8vdmFyX2R1bXAoJExpc3RlTSk7DQoJCQkJCWZvcmVhY2goJExpc3RlTSBhcyAkeExpc3RlTWV0aFApewkJCQkJCQ0KCQkJCQkJLy92YXJfZHVtcChpc3NldCgkeExpc3RlTWV0aFAtPlRvdGFsUmVtaXNlKSk7DQoJCQkJCQlpZiAoaXNzZXQoJHhMaXN0ZU1ldGhQLT5Ub3RhbFJlbWlzZSkgJiYgIWlzc2V0KCRUb3RhbFJlbWlzZSkgKXsNCgkJCQkJCQkvL3Zhcl9kdW1wKCR4TGlzdGVNZXRoUC0+VG90YWxSZW1pc2UpOw0KCQkJCQkJCSRUb3RhbFJlbWlzZT0oaW50KSR4TGlzdGVNZXRoUC0+VG90YWxSZW1pc2U7DQoJCQkJCQkJJFBhbmllci0+VG90YWxSZW1pc2UgPSAkVG90YWxSZW1pc2UgOw0KCQkJCQkJfQ0KCQkJCQkJZm9yZWFjaCgkeExpc3RlTWV0aFAtPkxJU1RFX01PRFVMRVBBSUUgYXMgJHhNZXRoUCl7CQkJCQkJDQoJCQkJCQkJJFRvdGFsUmVkdWN0aW9uICs9KGludCkkeE1ldGhQLT5NT05UQU5UIDsNCgkJCQkJCQkkTW9kdWxlPSRuYWJ5c3ktPkdldE1vZHVsZVBhaWUoJHhNZXRoUC0+SEFORExFKTsNCgkJCQkJCQlpZiAoaXNzZXQoJE1vZHVsZSkpew0KCQkJCQkJCQkvL3Zhcl9kdW1wKCRNb2R1bGUpOw0KCQkJCQkJCQkkTGlzdGVNZXRob2RlUGFpZVtdPSRNb2R1bGUgOw0KCQkJCQkJCQkkTGlzdGVNb2JpbGVQYWllQ2hlY2tPdXRbXT0keE1ldGhQOw0KCQkJCQkJCX0JCQkJCQkNCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCQkNCgkJCQkJJFBhbmllci0+VG90YWxSZWR1Y3Rpb249JFRvdGFsUmVkdWN0aW9uOw0KCQkJCX0NCgkJCQljYXRjaCAoRXhjZXB0aW9uICRleCl7DQoNCgkJCQl9DQoJCQl9DQoNCgkJCS8vdmFyX2R1bXAoJExpc3RlTW9kQ2FsbEJhY2spOw0KCQkJJExpc3RlPSRQYW5pZXItPkdldExpc3QoKTsNCgkJCS8vdmFyX2R1bXAoJExpc3RlKTsNCgkJCS8vZXhpdDsNCg0KCQkJaWYgKCRMaXN0ZSl7DQoJCQkJLy9PbiB2YWxpZGUgbGEgdmVudGUgDQoJCQkJLy92YXJfZHVtcCgkUGFuaWVyLT5nZXRUb3RhbFByaWNlQ2FydCgpKTsNCgkJCQkvL2V4aXQgOw0KCQkJCSRWZW50ZT1uZXcgeFZlbnRlKCRuYWJ5c3kpIDsNCgkJCQkvL3Zhcl9kdW1wKCRQYW5pZXItPlRvdGFsUmVkdWN0aW9uKTsNCgkJCQlpZiAoKGludCkkUGFuaWVyLT5Nb250YW50VmVyc2UgPT0wKXsNCgkJCQkJJFBhbmllci0+TW9udGFudFZlcnNlID0gJFBhbmllci0+Z2V0VG90YWxQcmljZUNhcnQoKSAtIChpbnQpJFBhbmllci0+VG90YWxSZW1pc2UgLSAoaW50KSRQYW5pZXItPlRvdGFsUmVkdWN0aW9uIDsNCgkJCQl9DQoJCQkJLy92YXJfZHVtcCgkUGFuaWVyLT5Nb250YW50VmVyc2UpOw0KCQkJCS8vdmFyX2R1bXAoJFBhbmllci0+Z2V0VG90YWxQcmljZUNhcnQoKSk7DQoJCQkJLy92YXJfZHVtcCgkUGFuaWVyLT5nZXRUb3RhbE5ldEFQYXllcigpKTsNCg0KCQkJCSRJZEZhY3R1cmU9MDsNCgkJCQkkUmVwb25zZUlEPSRWZW50ZS0+VmFsaWRlcigkUGFuaWVyKSA7DQoJCQkJLy92YXJfZHVtcCgkUmVwb25zZUlEKTsNCgkJCQlpZiAoaXNfb2JqZWN0KCRSZXBvbnNlSUQpKXsNCgkJCQkJaWYgKGdldF9jbGFzcygkUmVwb25zZUlEKSAhPT0gInhFcnJldXIiKXsNCgkJCQkJCSRJZEZhY3R1cmU9JFJlcG9uc2VJRDsNCgkJCQkJfWVsc2V7DQoJCQkJCQkvL0VycmV1cg0KCQkJCQkJaWYgKCRSZXBvbnNlSUQtPk9LPjApew0KCQkJCQkJCSRJZEZhY3R1cmU9JFJlcG9uc2VJRC0+RXh0cmE7DQoJCQkJCQl9ZWxzZXsNCgkJCQkJCQllY2hvIGpzb25fZW5jb2RlKCRSZXBvbnNlSUQpOw0KCQkJCQkJCWV4aXQ7DQoJCQkJCQl9CQkJCQkJDQoJCQkJCX0NCgkJCQl9ZWxzZXsNCgkJCQkJJElkRmFjdHVyZT0kUmVwb25zZUlEOw0KCQkJCX0NCg0KCQkJCWlmICgkSWRGYWN0dXJlPjApew0KICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJExpc3RlTW9kQ2FsbEJhY2spKXsNCgkJCQkJCWlmIChjb3VudCgkTGlzdGVNb2RDYWxsQmFjayk+MCl7DQoJCQkJCQkJZm9yZWFjaCgkTGlzdGVCb25BY2hhdCBhcyAkTHN0Qm9uQWNoYXQpew0KCQkJCQkJCQkvL3Zhcl9kdW1wKCRMc3RCb25BY2hhdCk7DQoJCQkJCQkJCS8vZXhpdDsNCgkJCQkJCQkJJEJvbkFjaGF0PSRMc3RCb25BY2hhdCA7DQoJCQkJCQkJCS8vZm9yZWFjaCAoJExzdEJvbkFjaGF0IGFzICRCb25BY2hhdCl7DQoJCQkJCQkJCQkvL2VjaG8gX19GSUxFX18uIiBCb25BY2hhdDogPC9icj4iOw0KCQkJCQkJCQkJLy92YXJfZHVtcCgkQm9uQWNoYXQpOw0KCQkJCQkJCQkJLy9leGl0Ow0KCQkJCQkJCQkJZm9yZWFjaCAoJExpc3RlTW9kQ2FsbEJhY2sgYXMgJE1vZEJvbkFjaGF0KXsJCQkJCQkJDQoJCQkJCQkJCQkJLy9DaGFxdWUgTW9kdWxlIGRlIEJvbiBkJ2FjaGF0IHZhbGlkZXJhIGRlIHNvbiBjb3TDqSBwb3VyIGfDqXJlciBzYSBwcm9wcmUgaGlzdG9yaXF1ZQ0KCQkJCQkJCQkJCS8vdmFyX2R1bXAoJEJvbkFjaGF0KTsNCgkJCQkJCQkJCQlpZiAoJE1vZEJvbkFjaGF0LT5VcERhdGVGYWN0dXJlKCRJZEZhY3R1cmUsJFBhbmllciwkQm9uQWNoYXQpID09IGZhbHNlKXsNCgkJCQkJCQkJCQkJLy9PbiBhbm51bGUgbGEgZmFjdHVyZSBvdSBiaWVuID8NCgkJCQkJCQkJCQkJJEVyci0+VHhFcnJldXIgLj0kTW9kQm9uQWNoYXQtPk5vbSgpLiI6ICIuJE1vZEJvbkFjaGF0LT5MYXN0RXJyb3IoKS4iIyI7DQoJCQkJCQkJCQkJfQkJCQkJCQkJCQkNCgkJCQkJCQkJCX0NCgkJCQkJCQkJLy99DQoJCQkJCQkJfQ0KCQkJCQkJfQkJCQkJCQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCgkJCQkJaWYgKGlzc2V0KCRMaXN0ZU1ldGhvZGVQYWllKSl7DQoJCQkJCQkvL3Zhcl9kdW1wKCRMaXN0ZU1ldGhvZGVQYWllKTsNCgkJCQkJCWZvcmVhY2goJExpc3RlTWV0aG9kZVBhaWUgYXMgJE1ldGhQKXsNCgkJCQkJCQl0cnl7DQoJCQkJCQkJCSRJbmQ9YXJyYXlfc2VhcmNoKCRNZXRoUCwkTGlzdGVNZXRob2RlUGFpZSk7DQoJCQkJCQkJCWlmIChpc3NldCgkTGlzdGVNb2JpbGVQYWllQ2hlY2tPdXRbJEluZF0pKXsNCgkJCQkJCQkJCSRDaGVja091dD0kTGlzdGVNb2JpbGVQYWllQ2hlY2tPdXRbJEluZF07DQoJCQkJCQkJCQkvL3Zhcl9kdW1wKCRDaGVja091dCk7DQoJCQkJCQkJCQkkQ2hlY2tPdXRBcnJheT0kQ2hlY2tPdXQ7DQoJCQkJCQkJCQlpZiAoaXNfb2JqZWN0KCRDaGVja091dEFycmF5KSl7DQoJCQkJCQkJCQkJJENoZWNrT3V0QXJyYXk9KGFycmF5KSRDaGVja091dCA7DQoJCQkJCQkJCQl9CQkJCQkJCQkJDQoJCQkJCQkJCQkvL3Zhcl9kdW1wKCRDaGVja091dEFycmF5KTsNCgkJCQkJCQkJCWlmICgkTWV0aFAtPlVwRGF0ZUZhY3R1cmUoJElkRmFjdHVyZSwkUGFuaWVyLCRDaGVja091dEFycmF5KSA9PSBmYWxzZSl7DQoJCQkJCQkJCQkJLy9PbiBhbm51bGUgbGEgZmFjdHVyZSBvdSBiaWVuID8NCgkJCQkJCQkJCQkkRXJyLT5UeEVycmV1ciAuPSRNZXRoUC0+Tm9tKCkuIjogIi4kTWV0aFAtPkxhc3RFcnJvcigpLiIjIjsNCgkJCQkJCQkJCX0NCgkJCQkJCQkJfQ0KCQkJCQkJCQkvL2V4aXQ7DQoJCQkJCQkJfWNhdGNoKEV4Y2VwdGlvbiAkZXgpew0KDQoJCQkJCQkJfQ0KCQkJCQkJCQ0KCQkJCQkJfQ0KCQkJCQl9DQoNCgkJCQkJJFJlcG9uc2U9bmV3IHhFcnJldXI7DQoJCQkJCSRSZXBvbnNlLT5PSz0xOw0KCQkJCQkkUmVwb25zZS0+RXh0cmE9JElkRmFjdHVyZSA7DQoJCQkJCSRSZXBvbnNlLT5Tb3VyY2U9InBhbmllcl9hY3Rpb24ucGhwIiA7DQoJCQkJCWlmIChpc3NldCgkRXJyLT5UeEVycmV1cikpew0KCQkJCQkJaWYgKCRFcnItPlR4RXJyZXVyICE9PSAiIil7DQoJCQkJCQkJJFJlcG9uc2UtPlR4RXJyZXVyPSRFcnItPlR4RXJyZXVyOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCSRyZXRvdXI9anNvbl9lbmNvZGUoJFJlcG9uc2UpIDsNCgkJCQkJZWNobyAkcmV0b3VyIDsNCgkJCQkJJFBhbmllci0+VmlkZXIoKSA7DQoJCQkJCWV4aXQgOw0KCQkJCX0NCg0KCQkJfQ0KDQoJCQkkanNvbl9saXN0ZT0kUGFuaWVyLT5HZXRMaXN0ZUpTT04obnVsbCx0cnVlKTsNCgkJCWVjaG8gJGpzb25fbGlzdGUgOw0KCQkJJFBhbmllci0+VmlkZXIoKSA7DQoJCQlleGl0IDsNCgkNCgkJY2FzZSAiR0VUX05FV1BBTklFUiIgOg0KCQkJLyogUmV0b3VybmUgbGUgTsKwIGQnVW4gTm91dmVhdSBQYW5pZXIgKi8NCgkJCS8vJFBhbmllcj1uZXcgeENhcnRQcm9Gb3JtYSgkbmFieXN5LT5NYUJvdXRpcXVlLDApOw0KCQkJLy9pZiAoISRJc1Byb2Zvcm1hKXsNCgkJCQkvL3ByaW50X3IoJG5hYnlzeS0+VXNlcik7DQoJCQkJJFBhbmllcj1uZXcgeENhcnQoJG5hYnlzeS0+TWFCb3V0aXF1ZSwwKTsNCgkJCQkkUGFuaWVyLT5JZENhaXNzaWVyPTAgOw0KCQkJCWlmIChpc3NldCgkX1NFU1NJT05bJ0lkVXNlciddKSl7DQoJCQkJCSRQYW5pZXItPklkQ2Fpc3NpZXI9JF9TRVNTSU9OWydJZFVzZXInXSA7DQoJCQkJCSRQYW5pZXItPkNhaXNzaWVyPSRfU0VTU0lPTlsndXNlciddIDsNCgkJCQl9CQkJCQ0KCQkJCSRQYW5pZXItPklkRmFjdHVyZT0wOw0KCQkJCSRQYW5pZXItPklkQ2xpZW50PTA7DQoJCQkJJFBhbmllci0+TW9udGFudFZlcnNlPTA7DQoJCQkJJFBhbmllci0+TW9udGFudFJlbmR1PTA7DQoJCQkJJFBhbmllci0+SGV1cmVGYWN0dXJlPWRhdGUoIkg6aTpzIikgOw0KCQkJCSRQYW5pZXItPkRhdGVGYWN0dXJlKGRhdGUoJ2QvbS9ZJykpOw0KDQoJCQkvL30NCgkJCSRyZXRvdXI9JFBhbmllci0+VG9KU09OKCkgOyAvL2pzb25fZW5jb2RlKCRQYW5pZXItPk1hQm91dGlxdWUpIDsNCgkJCWVjaG8gJHJldG91ciA7DQoJCQlleGl0Ow0KCQkJDQoJCWNhc2UgIkxJU1RFX1BBTklFUiI6DQoJCQkkR3Jvc3Npc3RlPWZhbHNlOw0KDQoJCQlpZiAoIWlzc2V0KCRQYW5pZXIpKXsNCgkJCQlyZXR1cm4gbnVsbCA7DQoJCQl9DQoJCQlpZiAoaXNzZXQoJFBBUkFNWydHcm9zc2lzdGUnXSkpewkJCQkNCgkJCQlpZiAoJFBBUkFNWydHcm9zc2lzdGUnXT09J3RydWUnKXsNCgkJCQkJJEdyb3NzaXN0ZT10cnVlIDsNCgkJCQl9ZWxzZXsNCgkJCQkJJEdyb3NzaXN0ZT1mYWxzZSA7DQoJCQkJfQkJCQkNCgkJCX0NCgkJCSRUeEdyb3NzaXN0ZVQ9IiIgOw0KCQkJaWYgKCRHcm9zc2lzdGUpew0KCQkJCSRUeEdyb3NzaXN0ZVQ9Ikdyb3NzaXN0ZVQ9MSIgOw0KCQkJfQ0KDQoJCQlpZiAoJFBBUkFNWydSZXBvbnNlJ109PSdKU09OJyl7DQoJCQkJJGpzb25fbGlzdGU9JFBhbmllci0+R2V0TGlzdGVKU09OKCRUeEdyb3NzaXN0ZVQpOw0KCQkJCWVjaG8gJGpzb25fbGlzdGUgOw0KCQkJCWV4aXQgOw0KCQkJfQ0KDQogICAgICAgICAgICBleGl0Ow0KCQkJDQoJCWNhc2UgIkFKT1VUX1BST0RVSVQiOg0KCQkJLy9Bam91dGUgdW4gcHJvZHVpdCBhdSBwYW5pZXINCgkJCSRUeXBlVmVudGVQYXJEZWZhdXQ9MSA7DQoJCQkkR3Jvc3Npc3RlPWZhbHNlOw0KCQkJJFRyb3V2PW51bGwgOw0KCQkJJExhUXRlPTEgOw0KCQkJaWYgKGlzc2V0KCRQQVJBTVsncXVhbnRpdGUnXSkpew0KCQkJCSRMYVF0ZT0kUEFSQU1bJ3F1YW50aXRlJ10gOw0KCQkJfQ0KCQkJDQoJCQlpZiAoJFBhbmllci0+SWRDbGllbnQ+MCl7DQoJCQkJJEdyb3NzaXN0ZT10cnVlIDsNCgkJCX0NCgkJCWlmICgkbmFieXN5LT5NYUJvdXRpcXVlLT5JZENvbXB0ZUNsaWVudD4wKXsNCgkJCQkkVHlwZVZlbnRlUGFyRGVmYXV0PTA7DQoJCQl9DQoJCQlpZiAoaXNzZXQoJFBBUkFNWydUeXBlVmVudGUnXSkpew0KCQkJCSRUeXBlVmVudGVQYXJEZWZhdXQ9JFBBUkFNWydUeXBlVmVudGUnXSA7DQoJCQl9DQoJCQlpZiAoaXNzZXQoJFBBUkFNWydHcm9zc2lzdGUnXSkpewkJCQkNCgkJCQlpZiAoJFBBUkFNWydHcm9zc2lzdGUnXT09J3RydWUnKXsNCgkJCQkJJEdyb3NzaXN0ZT10cnVlIDsNCgkJCQl9ZWxzZXsNCgkJCQkJJEdyb3NzaXN0ZT1mYWxzZSA7DQoJCQkJCS8vcHJpbnRfcigkUEFSQU0pIDsNCgkJCQl9CQkJCQ0KCQkJfQ0KCQkJJFBkdD1uZXcgeFByb2R1aXQoJG5hYnlzeSxudWxsLGZhbHNlLG51bGwsJG5hYnlzeS0+TWFCb3V0aXF1ZSkgOw0KCQkJLy9HZXN0aW9uIGRlIExlY3RldXIgZGUgQ29kZSBiYXJyZQ0KCQkJJEF2ZWNDb2RlQmFyPW51bGw7DQoJCQlpZiAoaXNzZXQoJFBBUkFNWydBdmVjQ29kZUJhciddKSl7DQoJCQkJJEF2ZWNDb2RlQmFyPXRydWUgOw0KCQkJfQ0KDQoJCQlpZiAoaXNzZXQoJFBBUkFNWydDT0RFQkFSJ10pKXsNCgkJCQkkQ29kZUJhcj0kUEFSQU1bJ0NPREVCQVInXSA7DQoJCQkJJExhUXRlPTEgOw0KCQkJCWlmIChpc3NldCgkUEFSQU1bJ3F1YW50aXRlJ10pKXsNCgkJCQkJJExhUXRlPSRQQVJBTVsncXVhbnRpdGUnXSA7DQoJCQkJfQ0KCQkJCWlmICgkQ29kZUJhciAhPT0nJyl7DQoJCQkJCSRQZHQ9bmV3IHhQcm9kdWl0KCRuYWJ5c3ksbnVsbCxmYWxzZSxudWxsLCRuYWJ5c3ktPk1hQm91dGlxdWUpIDsNCgkJCQkJJFRyb3V2PSRQZHQtPkdldFByb2R1aXQobnVsbCxudWxsLG51bGwsbnVsbCwkQ29kZUJhcik7CQkJCQkNCgkJCQkJaWYgKCRUcm91dil7DQoJCQkJCQlpZiAoJFRyb3V2LT5udW1fcm93cz09MSl7DQoJCQkJCQkJJElkUGR0PSRQZHQtPklkIDsJCQ0KCQkJCQkJCSRUcm91dj1udWxsIDsJLy9Qb3VyIGV2aXRlciBkZSByZWNoZXJjaGVyIGEgbm91dmVhdSBkYW5zIGxhIGxpc3RlIGRlIGNob2l4DQoJCQkJCQl9CQkJCQkNCgkJCQkJfQ0KCQkJCX0JCQkJCQkJDQoJCQl9DQoJCQkNCgkJCQ0KCQkJaWYgKGlzc2V0KCRQQVJBTVsnbm9tcmVjaCddKSl7DQoJCQkJJFRyb3V2PSRQZHQtPkdldFByb2R1aXQobnVsbCwkUEFSQU1bJ25vbXJlY2gnXSk7DQoJCQkJaWYgKCRUcm91dil7DQoJCQkJCWlmICgkVHJvdXYtPm51bV9yb3dzPT0xKXsNCgkJCQkJCSRJZFBkdD0kUGR0LT5JZCA7CQkNCgkJCQkJCSRUcm91dj1udWxsIDsJLy9Qb3VyIGV2aXRlciBkZSByZWNoZXJjaGVyIGEgbm91dmVhdSBkYW5zIGxhIGxpc3RlIGRlIGNob2l4DQoJCQkJCX0JCQkJCQkNCgkJCQl9CQkJCQ0KCQkJfQ0KDQoJCQlpZiAoaXNzZXQoJFBBUkFNWydJZFBkdCddKSl7DQoJCQkJJFBkdD1uZXcgeFByb2R1aXQoJG5hYnlzeSwkUEFSQU1bJ0lkUGR0J10sJG5hYnlzeTo6R0xPQkFMX0FVVE9fQ1JFQVRFX0RCVEFCTEUsbnVsbCwkbmFieXN5LT5NYUJvdXRpcXVlKSA7DQoJCQkJJElkUGR0PSRQZHQtPklkOw0KCQkJCSRUcm91dj1udWxsIDsJLy9Qb3VyIGV2aXRlciBkZSByZWNoZXJjaGVyIGEgbm91dmVhdSBkYW5zIGxhIGxpc3RlIGRlIGNob2l4DQoJCQl9DQoNCgkJCWlmIChpc3NldCgkVHJvdXYpKXsJCQkJDQoJCQkJaWYgKCRUcm91di0+bnVtX3Jvd3M+MSl7DQoJCQkJCS8vT24gYWZmaWNoZSB1biB0YWJsZWF1IHBvdXIgY2hvaXNpciBsZSBib24gcHJvZHVpdA0KCQkJCQllY2hvICdUcm91dj4xJyA7DQoJCQkJCXJldHVybiA7DQoJCQkJfQ0KCQkJfQ0KDQoJCQkvL3Zhcl9kdW1wKCRQZHQpIDsNCg0KCQkJaWYgKCRQZHQtPklkID4wKXsNCgkJCQkvL09uIHJlY2hlcmNoZSDDqXZlbnR1ZWxsZW1lbnQgc2kgbCdhcnRpY2xlIGVzdCBkw6lqw6AgZGFucyBsZSBwYW5pZXINCgkJCQkkdklkPSRQZHQtPklkLiJfIi4kVHlwZVZlbnRlUGFyRGVmYXV0IDsNCgkJCQkkUXRlUHJlYz0wIDsNCgkJCQlpZiAoaXNzZXQoJF9TRVNTSU9OWydwYW5pZXInLiRQYW5pZXItPklkXVskdklkXSkpew0KCQkJCQkvL3Zhcl9kdW1wKCRfU0VTU0lPTlsncGFuaWVyJy4kUGFuaWVyLT5JZF1bJHZJZF0pIDsNCgkJCQl9DQoJCQkJaWYgKGlzc2V0KCRfU0VTU0lPTlsncGFuaWVyJy4kUGFuaWVyLT5JZF1bJHZJZF0pKXsNCgkJCQkJJFF0ZVByZWM9JF9TRVNTSU9OWydwYW5pZXInLiRQYW5pZXItPklkXVskdklkXVsncXRlJ10gOw0KCQkJCX0JCQkNCgkJCQkNCgkJCQkkTmV3QXJ0aWNsZT1uZXcgeEFydGljbGVQYW5pZXIoJG5hYnlzeSwkUGR0LT5JZCwkTGFRdGUsJFR5cGVWZW50ZVBhckRlZmF1dCwkbmFieXN5LT5NYUJvdXRpcXVlKSA7DQoJCQkJaWYgKCROZXdBcnRpY2xlKXsJDQoJCQkJCSRNb2RpZj1mYWxzZSA7DQoJCQkJCWlmIChpc3NldCgkUEFSQU1bJ0lzTW9kaWZpY2F0aW9uJ10pKXsNCgkJCQkJCS8vJ09uIG1vZGlmaWUgbGEgcXVhbnRpdMOpJw0KCQkJCQkJJE1vZGlmPXRydWUgOw0KCQkJCQl9ZWxzZXsNCgkJCQkJCWlmICgkQXZlY0NvZGVCYXIpew0KCQkJCQkJCWlmICgkUGFuaWVyLT5QZHRFeGlzdGUoJFBkdC0+SWQsJFR5cGVWZW50ZVBhckRlZmF1dCkpew0KCQkJCQkJCQkvLydPbiBtb2RpZmllIGxhIHF1YW50aXTDqScNCgkJCQkJCQkJJE1vZGlmPWZhbHNlIDsNCgkJCQkJCQl9DQoJCQkJCQl9CQkJCQkJDQoJCQkJCX0NCgkJCQkJLypTaSBCb3V0aXF1ZSBhdmVjIFByaXggQ2FsY3Vsw6kgZXQgbm9uIEdyb3NzaXN0ZSAqLw0KCQkJCQlpZiAoJG5hYnlzeS0+TWFCb3V0aXF1ZS0+QXV0b0NhbGN1bFBWPjApew0KCQkJCQkJaWYgKCEkR3Jvc3Npc3RlKXsNCgkJCQkJCQkvL2VjaG8gJyA8L2JyPkplIGNhbGN1bCBsZSBQcml4IGRlIFZlbnRlOiAnIDsNCgkJCQkJCQkkRW5QbHVzPSROZXdBcnRpY2xlLT5Qcml4VSAqIHJvdW5kKCgkbmFieXN5LT5NYUJvdXRpcXVlLT5UYXV4UFYgLzEwMCksMCkgOw0KCQkJCQkJCSR2RW5QbHVzPSgkTmV3QXJ0aWNsZS0+UHJpeFUqKCRuYWJ5c3ktPk1hQm91dGlxdWUtPlRhdXhQViAvMTAwKSkgOw0KCQkJCQkJCSRFblBsdXM9KGludClyb3VuZCgkdkVuUGx1cywwLFBIUF9ST1VORF9IQUxGX1VQKSA7DQoJCQkJCQkJLy9lY2hvICcgPC9icj5MZSBTdXJwbHVzIGRlICcuJG5hYnlzeS0+TWFCb3V0aXF1ZS0+VGF1eFBWLiclID0nLiRFblBsdXMuJyA8L2JyPicgOw0KCQkJCQkJCSROZXdBcnRpY2xlLT5Qcml4VSArPSRFblBsdXMgOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCS8vdmFyX2R1bXAoJE5ld0FydGljbGUpOw0KCQkJCQkvL2VjaG8gJyA8L2JyPkFydGljbGUgUHJpeCBkZSBWZW50ZTogJy4gJE5ld0FydGljbGUtPlByaXhVLiIgUG91ciBsZSBUeXBlVmVudGU9Ii4kVHlwZVZlbnRlUGFyRGVmYXV0LiIgVmVudGUgR3Jvc3Npc3RlPSIuJEdyb3NzaXN0ZSA7DQoJCQkJCS8qIAktLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovDQoJCQkJCSRSZXA9JFBhbmllci0+YWRkUHJvZHVjdCgkTmV3QXJ0aWNsZS0+SWRQcm9kdWl0LCROZXdBcnRpY2xlLT5Ob20sJE5ld0FydGljbGUtPlF0ZSwkTmV3QXJ0aWNsZS0+UHJpeFUsJE5ld0FydGljbGUtPlR5cGVWZW50ZSwkUGFuaWVyLT5JZENsaWVudCwkTW9kaWYpIDsNCgkJCQkJaWYgKCRSZXAgIT0gdHJ1ZSApew0KCQkJCQkJJFR4RXJyZXVyPSRSZXAgOw0KCQkJCQkJZWNobyAkVHhFcnJldXIgOw0KCQkJCQkJZXhpdCA7DQoJCQkJCX0NCg0KCQkJCQkkVHhHcm9zc2lzdGVUPSIiIDsNCgkJCQkJaWYgKCRHcm9zc2lzdGUpew0KCQkJCQkJJFR4R3Jvc3Npc3RlVD0iR3Jvc3Npc3RlVD0xIiA7DQoJCQkJCX0NCgkJCQkJaWYgKGlzc2V0KCRQQVJBTVsnUmVwb25zZSddKSl7DQoJCQkJCQlpZiAoJFBBUkFNWydSZXBvbnNlJ109PSdQYW5pZXJIdG1sJyl7CQkJCQkJCQ0KCQkJCQkJCSRMaXN0ZUhUTUw9JFBhbmllci0+R2V0TGlzdGVQZHRIVE1MKCRUeEdyb3NzaXN0ZVQpOw0KCQkJCQkJCWVjaG8gJExpc3RlSFRNTCA7DQoJCQkJCQkJZXhpdCA7DQoJCQkJCQl9DQoJCQkJCQlpZiAoJFBBUkFNWydSZXBvbnNlJ109PSdKU09OJyl7DQoJCQkJCQkJJExpc3RlPSRQYW5pZXItPkdldExpc3QoKTsNCgkJCQkJCQkkanNvbl9saXN0ZT0kUGFuaWVyLT5HZXRMaXN0ZUpTT04oJFR4R3Jvc3Npc3RlVCk7DQoJCQkJCQkJZWNobyAkanNvbl9saXN0ZSA7DQoJCQkJCQkJZXhpdCA7DQoJCQkJCQl9DQoJCQkJCX0JCQkJDQoJCQkJfQ0KCQkJCQ0KCQkJfQ0KCQkJLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovCQkJDQoJCQlpZiAoaXNzZXQoJENhbGxCYWNrKSl7DQoJCQkJaWYgKCRDYWxsQmFjayAhPT0gJ1NFTEYnKXsNCgkJCQkJUmV0b3VybmUoJENhbGxCYWNrKSA7DQoJCQkJfWVsc2V7CQkJCQkNCgkJCQkJUmV0b3VybmUoKSA7DQoJCQkJfQ0KCQkJfQ0KICAgICAgICAgICAgZXhpdDsNCgkJCQ0KCQljYXNlICJTVVBQX1BST0RVSVQiOg0KCQkJLy9TdXBwcmltZSB1biBwcm9kdWl0IGR1IFBhbmllcg0KCQkJDQoJCQlicmVhazsNCgkJY2FzZSAiTU9ESUZfUFJPRFVJVCI6DQoJCQkvL01vZGlmaWUgdW4gcHJvZHVpdCBkdSBQYW5pZXINCgkJCQ0KCQkJYnJlYWs7DQoJCWNhc2UgIlRSQU5TRk9STUVfUFJPRk9STUEiOg0KCQkJLy9DaGFyZ2UgdW5lIFByb2Zvcm1hIGV0IGxhIHRyYW5zZm9ybWUgZGFucyB1biBwYW5pZXIgZGUgVmVudGUNCgkJCSRJZEJvdXRpcXVlPSRuYWJ5c3ktPk1hQm91dGlxdWUtPklkIDsNCgkJCWlmIChpc3NldCgkUEFSQU1bJ0lkQm91dGlxdWUnXSkpew0KCQkJCSRJZEJvdXRpcXVlPSRQQVJBTVsnSWRCb3V0aXF1ZSddIDsNCgkJCX0NCgkJCSRJZFByb2Zvcm1hPW51bGwgOw0KCQkJaWYgKGlzc2V0KCRQQVJBTVsnSWRQcm9mb3JtYSddKSl7DQoJCQkJJElkUHJvZm9ybWE9JFBBUkFNWydJZFByb2Zvcm1hJ10gOw0KCQkJfQ0KCQkJJElkQ2xpZW50PW51bGwgOw0KCQkJJENsaWVudD1udWxsOw0KCQkJaWYgKGlzc2V0KCRQQVJBTVsnSWRDbGllbnQnXSkpew0KCQkJCSRJZENsaWVudD0kUEFSQU1bJ0lkQ2xpZW50J10gOw0KCQkJfQ0KCQkJJEJvdXQ9bmV3IHhCb3V0aXF1ZSgkbmFieXN5LCRJZEJvdXRpcXVlKSA7DQoJCQkkUHJvZm9ybWE9bmV3IHhQcm9mb3JtYSgkbmFieXN5LCRCb3V0KSA7DQoJCQkkUGFuaWVyUD0kUHJvZm9ybWEtPkNoYXJnZXJQYW5pZXIoJElkUHJvZm9ybWEsdHJ1ZSkgOw0KCQkJaWYgKGlzc2V0KCRJZENsaWVudCkpew0KCQkJCSRDbGllbnQ9bmV3IHhDbGllbnQoJEJvdXQtPk1haW4sJElkQ2xpZW50KSA7DQoJCQkJaWYgKCRDbGllbnQtPklkPjApew0KCQkJCQkkUGFuaWVyUC0+SWRDbGllbnQ9JENsaWVudC0+SWQgOw0KCQkJCQkkUGFuaWVyUC0+U2F2ZUluZm9zQ2xpZW50KCRDbGllbnQtPk5vbSwkQ2xpZW50LT5QcmVub20sJENsaWVudC0+SWQsJElkRmFjdHVyZT1udWxsLCREYXRlRmFjdHVyZT1udWxsKTsNCgkJCQl9DQoJCQl9DQoJCQkkUmVwb25zZT1uZXcgeEVycmV1ciA7DQoJCQkkUmVwb25zZS0+T0s9IjAiIDsNCgkJCSRSZXBvbnNlLT5UeEVycmV1cj0iSW1wb3NzaWJsZSBkZSB0cmFuc2Zvcm1lciBsYSBwcm9mb3JtYSBuwrAiLiRJZFByb2Zvcm1hIDsNCgkJCSRSZXBvbnNlLT5FeHRyYT0iLi4vbGlzdGVfcHJvZm9ybWEucGhwIiA7DQoJCQkkUmVwb25zZS0+U291cmNlPSJwYW5pZXJfYWN0aW9uLnBocCIgOw0KCQkJJFBhbmllclY9JFBhbmllclAtPlRvUGFuaWVyVmVudGUoKSA7DQoJCQlpZiAoIWlzc2V0KCRQYW5pZXJWKSl7DQoJCQkJJHJldG91cj1qc29uX2VuY29kZSgkUmVwb25zZSkgOw0KCQkJfWVsc2V7DQoJCQkJaWYgKGlzc2V0KCRDbGllbnQpKXsNCgkJCQkJJFBhbmllclYtPlNhdmVJbmZvc0NsaWVudCgkQ2xpZW50LT5Ob20sJENsaWVudC0+UHJlbm9tLCRDbGllbnQtPklkLCRJZEZhY3R1cmU9bnVsbCwkRGF0ZUZhY3R1cmU9bnVsbCk7DQoJCQkJfQ0KCQkJCSRSZXBvbnNlLT5PSz0iMSI7DQoJCQkJJFJlcG9uc2UtPlR4RXJyZXVyPSIiIDsNCgkJCQkkUmVwb25zZS0+RXh0cmE9Ii4uL3Z1ZXMvdmVudGUucGhwP0lkUGFuaWVyPSIuJFBhbmllclYtPklkIDsNCgkJCQkkcmV0b3VyPWpzb25fZW5jb2RlKCRSZXBvbnNlKSA7DQoJCQl9DQoJCQlvYl9jbGVhbigpOw0KCQkJZWNobyAkcmV0b3VyIDsNCgkJCWV4aXQgOw0KCQkJDQoJCWNhc2UgJ0lNUFJJTUVfQ09ERUJBUicgOg0KCQkJJFR5cGVWZW50ZVBhckRlZmF1dD0xIDsNCgkJCSRHcm9zc2lzdGU9dHJ1ZTsNCgkJCSRMYVF0ZT0xIDsNCgkJCWlmICgkbmFieXN5LT5NYUJvdXRpcXVlLT5JZENvbXB0ZUNsaWVudD4wKXsNCgkJCQkkVHlwZVZlbnRlUGFyRGVmYXV0PTA7DQoJCQkJJEdyb3NzaXN0ZT1mYWxzZSA7DQoJCQl9DQoJCQlpZiAoaXNzZXQoJFBBUkFNWydUeXBlVmVudGUnXSkpew0KCQkJCSRUeXBlVmVudGVQYXJEZWZhdXQ9JFBBUkFNWydUeXBlVmVudGUnXSA7DQoJCQl9DQoJCQlpZiAoaXNzZXQoJFBBUkFNWydHcm9zc2lzdGUnXSkpewkJCQkNCgkJCQlpZiAoJFBBUkFNWydHcm9zc2lzdGUnXT09J3RydWUnKXsNCgkJCQkJJEdyb3NzaXN0ZT10cnVlIDsNCgkJCQl9ZWxzZXsNCgkJCQkJJEdyb3NzaXN0ZT1mYWxzZSA7DQoJCQkJCS8vcHJpbnRfcigkUEFSQU0pIDsNCgkJCQl9CQkJCQ0KCQkJfQ0KCQkJJFBkdD1uZXcgeFByb2R1aXQoJG5hYnlzeSxudWxsLCRuYWJ5c3k6OkdMT0JBTF9BVVRPX0NSRUFURV9EQlRBQkxFLG51bGwsJG5hYnlzeS0+TWFCb3V0aXF1ZSkgOw0KCQkJLy9HZXN0aW9uIGRlIExlY3RldXIgZGUgQ29kZSBiYXJyZQ0KCQkJJEF2ZWNDb2RlQmFyPW51bGw7DQoJCQlpZiAoaXNzZXQoJFBBUkFNWydBdmVjQ29kZUJhciddKSl7DQoJCQkJJEF2ZWNDb2RlQmFyPXRydWUgOw0KCQkJfQ0KDQoJCQlpZiAoaXNzZXQoJFBBUkFNWydDT0RFQkFSJ10pKXsNCgkJCQkkQ29kZUJhcj0kUEFSQU1bJ0NPREVCQVInXSA7DQoJCQkJJExhUXRlPTEgOw0KCQkJCWlmIChpc3NldCgkUEFSQU1bJ3F1YW50aXRlJ10pKXsNCgkJCQkJJExhUXRlPSRQQVJBTVsncXVhbnRpdGUnXSA7DQoJCQkJfQ0KCQkJCWlmICgkQ29kZUJhciAhPT0nJyl7DQoJCQkJCSRQZHQ9bmV3IHhQcm9kdWl0KCRuYWJ5c3ksbnVsbCwkbmFieXN5OjpHTE9CQUxfQVVUT19DUkVBVEVfREJUQUJMRSxudWxsLCRuYWJ5c3ktPk1hQm91dGlxdWUpIDsNCgkJCQkJJFBkdC0+R2V0UHJvZHVpdChudWxsLG51bGwsbnVsbCxudWxsLCRDb2RlQmFyKTsNCgkJCQl9CQkJCQkJCQ0KCQkJfQ0KCQkJaWYgKGlzc2V0KCRQQVJBTVsnSWRQZHQnXSkpew0KCQkJCSRQZHQ9bmV3IHhQcm9kdWl0KCRuYWJ5c3ksJFBBUkFNWydJZFBkdCddLCRuYWJ5c3k6OkdMT0JBTF9BVVRPX0NSRUFURV9EQlRBQkxFLG51bGwsJG5hYnlzeS0+TWFCb3V0aXF1ZSkgOw0KCQkJfQ0KCQkJaWYgKGlzc2V0KCRQQVJBTVsnbm9tcmVjaCddKSl7DQoJCQkJJFRyb3V2PSRQZHQtPkdldFByb2R1aXQobnVsbCwkUEFSQU1bJ25vbXJlY2gnXSk7DQoJCQkJaWYgKCRUcm91dil7DQoJCQkJCSRydz0kVHJvdXYtPmZldGNoX2Fzc29jKCk7DQoJCQkJCSRJZFBkdD0kcndbJ2lkJ10gOw0KCQkJCQkkUGR0PW5ldyB4UHJvZHVpdCgkbmFieXN5LCRJZFBkdCwkbmFieXN5OjpHTE9CQUxfQVVUT19DUkVBVEVfREJUQUJMRSxudWxsLCRuYWJ5c3ktPk1hQm91dGlxdWUpIDsNCgkJCQl9CQkJCQ0KCQkJfQ0KDQoJCQlpZiAoJFBkdC0+SWQgPjApewkJCQkNCgkJCQkkQXJ0aWNsZT1uZXcgeEFydGljbGVQYW5pZXIoJG5hYnlzeSwkUGR0LT5JZCwkTGFRdGUsJFR5cGVWZW50ZVBhckRlZmF1dCwkbmFieXN5LT5NYUJvdXRpcXVlKSA7DQoJCQkJaWYgKCRBcnRpY2xlKXsJDQoJCQkJCSRNb2RpZj1mYWxzZSA7DQoJCQkJCS8qU2kgQm91dGlxdWUgYXZlYyBQcml4IENhbGN1bMOpIGV0IG5vbiBHcm9zc2lzdGUgKi8NCgkJCQkJaWYgKCRuYWJ5c3ktPk1hQm91dGlxdWUtPkF1dG9DYWxjdWxQVj4wKXsNCgkJCQkJCWlmICghJEdyb3NzaXN0ZSl7DQoJCQkJCQkJLy9lY2hvICcgPC9icj5KZSBjYWxjdWwgbGUgUHJpeCBkZSBWZW50ZTogJyA7DQoJCQkJCQkJJEVuUGx1cz0kQXJ0aWNsZS0+UHJpeFUgKiByb3VuZCgoJG5hYnlzeS0+TWFCb3V0aXF1ZS0+VGF1eFBWIC8xMDApLDApIDsNCgkJCQkJCQkkdkVuUGx1cz0oJEFydGljbGUtPlByaXhVKigkbmFieXN5LT5NYUJvdXRpcXVlLT5UYXV4UFYgLzEwMCkpIDsNCgkJCQkJCQkkRW5QbHVzPShpbnQpcm91bmQoJHZFblBsdXMsMCxQSFBfUk9VTkRfSEFMRl9VUCkgOw0KCQkJCQkJCS8vZWNobyAnIDwvYnI+TGUgU3VycGx1cyBkZSAnLiRuYWJ5c3ktPk1hQm91dGlxdWUtPlRhdXhQVi4nJSA9Jy4kRW5QbHVzLicgPC9icj4nIDsNCgkJCQkJCQkkQXJ0aWNsZS0+UHJpeFUgKz0kRW5QbHVzIDsNCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCQkNCgkJCQkJLy9MYW5jZW1lbnQgZGUgbGEgZ8OpbsOpcmF0aW9uIGR1IENvZGVCYXJyZQ0KCQkJCQkkeENCPW5ldyB4Q29kZUJhckVBTjEzKCRuYWJ5c3ktPk1hQm91dGlxdWUpCTsNCgkJCQkJJE1jcENvZGU9JHhDQi0+R2V0TUNQRUFOMTNDb2RlKCRBcnRpY2xlLT5JZFByb2R1aXQpIDsNCgkJCQkJDQoJCQkJCSR4Q0ItPkltcHJpbWVDb2RlQmFyRUFOMTMoJFBkdCwkTWNwQ29kZSkgOw0KCQkJCQlleGl0IDsNCgkJCQl9DQoJCQkJDQoJCQl9DQoJCSAgICBleGl0Ow0KDQoJCWNhc2UgJ0dFVF9FTlRFVEVfVElDS0VUJzoNCgkJCSROQl9MSUdORT0wOw0KCQkJJFRhYj0kbmFieXN5LT5NYUJvdXRpcXVlLT5HZXRFbnRldGVBcnJheSgpOwkJCQ0KCQkJJFJlcG9uc2U9anNvbl9lbmNvZGUoJFRhYik7DQoJCQlpZiAoc3Vic3RyKCRSZXBvbnNlLDAsMSkgIT09J1snKXsNCgkJCQkkUmVwb25zZT0iWyIuJFJlcG9uc2UuIl0iIDsNCgkJCX0NCgkJCWVjaG8gJFJlcG9uc2UgOw0KICAgICAgICAgICAgZXhpdDsNCg0KCQljYXNlICdHRVRfUElFRF9USUNLRVQnOg0KCQkJJFBpZWRQYWdlPSRuYWJ5c3ktPk1hQm91dGlxdWUtPlRpY2tldFR4UGllZFBhZ2UgOw0KCQkJJFJldFsnUGllZFRpY2tldCddPSRQaWVkUGFnZSA7CQkJDQoJCQkkUmVwb25zZT1qc29uX2VuY29kZSgkUmV0LEpTT05fRk9SQ0VfT0JKRUNUKTsNCgkJCWlmIChzdWJzdHIoJFJlcG9uc2UsMCwxKSAhPT0nWycpew0KCQkJCSRSZXBvbnNlPSJbIi4kUmVwb25zZS4iXSIgOw0KCQkJfQ0KCQkJZWNobyAkUmVwb25zZSA7DQoJCQlleGl0Ow0KDQoJCWRlZmF1bHQ6DQoNCgkJYnJlYWs7DQoJfQ0KDQoNCj8+IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGRvY0Jsb2NrIjtOO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";